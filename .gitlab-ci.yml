# stages:
#   - test
#   - deploy

# test-before-deploy:
#   stage: test
#   script:
#     - echo "🔍 코드 정합성 테스트 중..."
#     - docker-compose -f docker-compose.yml config   # 구성 유효성 검사
#   tags:
#     - deploy

# deploy-on-master:
#   stage: deploy
#   script:
#     - echo "🚀 master 브랜치에서 배포 시작"
#     - docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build
#   tags:
#     - deploy
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: always


stages:
  - build
  - test
  - deploy

build-be:
  stage: build
  tags: [deploy]
  script:
    - docker-compose -f docker-compose.yml build backend
  rules:
    - if: '$CI_COMMIT_BRANCH == "be-mvp"'

build-data:
  stage: build
  tags: [deploy]
  script:
    - docker-compose -f docker-compose.yml build data
  rules:
    - if: '$CI_COMMIT_BRANCH == "data-dev"'

build-fe:
  stage: build
  tags: [deploy]
  script:
    - docker-compose -f docker-compose.yml build frontend
  rules:
    - if: '$CI_COMMIT_BRANCH == "fe-dev"'

integration-test:
  stage: test
  tags: [deploy]
  script:
    - docker-compose -f docker-compose.yml up -d
    - sleep 10
    - curl -sSf https://www.souffle.kr/data/api/v1/healthcheck || exit 1
    - docker-compose down
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "master"'

deploy:
  stage: deploy
  tags: [deploy]
  needs: [integration-test]
  script:
    - docker-compose -f docker-compose.yml up -d --build
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
